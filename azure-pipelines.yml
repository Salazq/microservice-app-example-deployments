trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Variables definidas en el portal como secretas
  ARM_CLIENT_ID: $(ARM_CLIENT_ID)
  ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
  ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
  ARM_TENANT_ID: $(ARM_TENANT_ID)

stages:
- stage: Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    steps:
    - script: |
        cd terraform
        export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
        export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
        export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
        export ARM_TENANT_ID=$(ARM_TENANT_ID)

        terraform --version
        terraform init -backend-config="storage_account_name=$(storageAccountName)" \
                       -backend-config="container_name=$(containerName)" \
                       -backend-config="key=$(key)" \
                       -backend-config="access_key=$(accessKey)"
        terraform plan -out=tfplan
      displayName: 'Terraform Init and Plan'

- stage: Deploy
  displayName: 'Terraform Apply'
  dependsOn: Plan
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
    - script: |
        cd terraform
        export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
        export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
        export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
        export ARM_TENANT_ID=$(ARM_TENANT_ID)

        terraform --version
        terraform init -backend-config="storage_account_name=$(storageAccountName)" \
                       -backend-config="container_name=$(containerName)" \
                       -backend-config="key=$(key)" \
                       -backend-config="access_key=$(accessKey)"
        terraform apply -auto-approve tfplan
      displayName: 'Terraform Init and Apply'
