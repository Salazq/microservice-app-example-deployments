trigger:
  branches:
    include:
      - main

variables:
  terraformVersion: '1.5.7'  # Versión específica de Terraform
  workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
  serviceConnection: 'Azure for Students(bfc3d097-7e73-40b8-aa34-e70b307c0867)'
  backendResourceGroup: 'VM'
  backendStorageAccount: 'vmrecursos'
  backendContainer: 'tfstate'
  backendKey: 'pipelines.tfstate'

pool:
  vmImage: ubuntu-latest

stages:
- stage: Terraform_Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: Plan
    displayName: 'Terraform Plan Job'
    steps:
    - task: TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: $(terraformVersion)

    - script: terraform --version
      displayName: 'Verify Terraform version'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: $(workingDirectory)
        backendServiceArm: $(serviceConnection)
        backendAzureRmResourceGroupName: $(backendResourceGroup)
        backendAzureRmStorageAccountName: $(backendStorageAccount)
        backendAzureRmContainerName: $(backendContainer)
        backendAzureRmKey: $(backendKey)
        commandOptions: '-reconfigure'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: $(workingDirectory)

    - task: TerraformTaskV4@4
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: $(serviceConnection)
        commandOptions: '-out=tfplan'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Plan Artifact'
      inputs:
        targetPath: '$(workingDirectory)/terraform.tfplan'
        artifact: 'TerraformPlan'
        publishLocation: 'pipeline'